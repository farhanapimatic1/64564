# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module CalculatorService
  # DefaultBindingICalculatorController
  class DefaultBindingICalculatorController < BaseController
    @instance = DefaultBindingICalculatorController.new

    class << self
      attr_accessor :instance
    end

    def instance
      self.class.instance
    end

    # TODO: type endpoint description here
    # @param [ICalculatorAddInputMessage] body Required parameter: Example:
    # @return ICalculatorAddOutputMessage response from the API call
    def add(body)
      # Prepare query url.
      _query_builder = Configuration.get_base_uri
      _query_builder << '/Add'
      _query_url = APIHelper.clean_url _query_builder

      # Prepare headers.
      _headers = {
        'accept' => 'application/json',
        'content-type' => 'application/json; charset=utf-8'
      }

      # Prepare and execute HttpRequest.
      _request = @http_client.post(
        _query_url,
        headers: _headers,
        parameters: body.to_json
      )
      _context = execute_request(_request)
      validate_response(_context)

      # Return appropriate response type.
      decoded = APIHelper.json_deserialize(_context.response.raw_body)
      ICalculatorAddOutputMessage.from_hash(decoded)
    end

    # TODO: type endpoint description here
    # @param [ICalculatorSubtractInputMessage] body Required parameter:
    # Example:
    # @return ICalculatorSubtractOutputMessage response from the API call
    def create_subtract(body)
      # Prepare query url.
      _query_builder = Configuration.get_base_uri
      _query_builder << '/Subtract'
      _query_url = APIHelper.clean_url _query_builder

      # Prepare headers.
      _headers = {
        'accept' => 'application/json',
        'content-type' => 'application/json; charset=utf-8'
      }

      # Prepare and execute HttpRequest.
      _request = @http_client.post(
        _query_url,
        headers: _headers,
        parameters: body.to_json
      )
      _context = execute_request(_request)
      validate_response(_context)

      # Return appropriate response type.
      decoded = APIHelper.json_deserialize(_context.response.raw_body)
      ICalculatorSubtractOutputMessage.from_hash(decoded)
    end
  end
end
