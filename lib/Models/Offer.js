/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Offer
 */
class Offer extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.merchant = this.constructor.getValue(obj.merchant || obj.Merchant);
        this.offerAttributes =
          this.constructor.getValue(obj.offerAttributes
     || obj.OfferAttributes);
        this.offerListing = this.constructor.getValue(obj.offerListing || obj.OfferListing);
        this.loyaltyPoints = this.constructor.getValue(obj.loyaltyPoints || obj.LoyaltyPoints);
        this.promotions = this.constructor.getValue(obj.promotions || obj.Promotions);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'merchant', realName: 'Merchant', type: 'Merchant' },
            { name: 'offerAttributes', realName: 'OfferAttributes', type: 'OfferAttributes' },
            { name: 'offerListing', realName: 'OfferListing', array: true, type: 'OfferListing' },
            { name: 'loyaltyPoints', realName: 'LoyaltyPoints', type: 'LoyaltyPoints' },
            { name: 'promotions', realName: 'Promotions', type: 'Promotions' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Offer;
