/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of SearchIndex
 */
class SearchIndex extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.indexName = this.constructor.getValue(obj.indexName || obj.IndexName);
        this.relevanceRank = this.constructor.getValue(obj.relevanceRank || obj.RelevanceRank);
        this.aSIN = this.constructor.getValue(obj.aSIN || obj.ASIN);
        this.results = this.constructor.getValue(obj.results || obj.Results);
        this.pages = this.constructor.getValue(obj.pages || obj.Pages);
        this.correctedQuery = this.constructor.getValue(obj.correctedQuery || obj.CorrectedQuery);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'indexName', realName: 'IndexName' },
            { name: 'relevanceRank', realName: 'RelevanceRank' },
            { name: 'aSIN', realName: 'ASIN', array: true },
            { name: 'results', realName: 'Results' },
            { name: 'pages', realName: 'Pages' },
            { name: 'correctedQuery', realName: 'CorrectedQuery', type: 'CorrectedQuery' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = SearchIndex;
