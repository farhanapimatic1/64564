/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of OperationRequest
 */
class OperationRequest extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.hTTPHeaders = this.constructor.getValue(obj.hTTPHeaders || obj.HTTPHeaders);
        this.requestId = this.constructor.getValue(obj.requestId || obj.RequestId);
        this.arguments = this.constructor.getValue(obj.arguments || obj.Arguments);
        this.errors = this.constructor.getValue(obj.errors || obj.Errors);
        this.requestProcessingTime =
          this.constructor.getValue(obj.requestProcessingTime
     || obj.RequestProcessingTime);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'hTTPHeaders', realName: 'HTTPHeaders', type: 'HTTPHeaders' },
            { name: 'requestId', realName: 'RequestId' },
            { name: 'arguments', realName: 'Arguments', type: 'Arguments' },
            { name: 'errors', realName: 'Errors', type: 'Errors' },
            { name: 'requestProcessingTime', realName: 'RequestProcessingTime' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = OperationRequest;
