/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of ItemLookupRequest
 */
class ItemLookupRequest extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.condition = this.constructor.getValue(obj.condition || obj.Condition);
        this.idType = this.constructor.getValue(obj.idType || obj.IdType);
        this.merchantId = this.constructor.getValue(obj.merchantId || obj.MerchantId);
        this.itemId = this.constructor.getValue(obj.itemId || obj.ItemId);
        this.responseGroup = this.constructor.getValue(obj.responseGroup || obj.ResponseGroup);
        this.searchIndex = this.constructor.getValue(obj.searchIndex || obj.SearchIndex);
        this.variationPage = this.constructor.getValue(obj.variationPage || obj.VariationPage);
        this.relatedItemPage =
          this.constructor.getValue(obj.relatedItemPage
     || obj.RelatedItemPage);
        this.relationshipType =
          this.constructor.getValue(obj.relationshipType
     || obj.RelationshipType);
        this.includeReviewsSummary =
          this.constructor.getValue(obj.includeReviewsSummary
     || obj.IncludeReviewsSummary);
        this.truncateReviewsAt =
          this.constructor.getValue(obj.truncateReviewsAt
     || obj.TruncateReviewsAt);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'condition', realName: 'Condition' },
            { name: 'idType', realName: 'IdType' },
            { name: 'merchantId', realName: 'MerchantId' },
            { name: 'itemId', realName: 'ItemId', array: true },
            { name: 'responseGroup', realName: 'ResponseGroup', array: true },
            { name: 'searchIndex', realName: 'SearchIndex' },
            { name: 'variationPage', realName: 'VariationPage' },
            { name: 'relatedItemPage', realName: 'RelatedItemPage' },
            { name: 'relationshipType', realName: 'RelationshipType', array: true },
            { name: 'includeReviewsSummary', realName: 'IncludeReviewsSummary' },
            { name: 'truncateReviewsAt', realName: 'TruncateReviewsAt' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = ItemLookupRequest;
