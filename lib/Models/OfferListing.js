/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of OfferListing
 */
class OfferListing extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.offerListingId = this.constructor.getValue(obj.offerListingId || obj.OfferListingId);
        this.pricePerUnit = this.constructor.getValue(obj.pricePerUnit || obj.PricePerUnit);
        this.price = this.constructor.getValue(obj.price || obj.Price);
        this.salePrice = this.constructor.getValue(obj.salePrice || obj.SalePrice);
        this.amountSaved = this.constructor.getValue(obj.amountSaved || obj.AmountSaved);
        this.percentageSaved =
          this.constructor.getValue(obj.percentageSaved
     || obj.PercentageSaved);
        this.availability = this.constructor.getValue(obj.availability || obj.Availability);
        this.availabilityAttributes =
          this.constructor.getValue(obj.availabilityAttributes
     || obj.AvailabilityAttributes);
        this.isEligibleForSuperSaverShipping =
          this.constructor.getValue(obj.isEligibleForSuperSaverShipping
     || obj.IsEligibleForSuperSaverShipping);
        this.isEligibleForPrimeFreeDigitalVideo =
          this.constructor.getValue(obj.isEligibleForPrimeFreeDigitalVideo
     || obj.IsEligibleForPrimeFreeDigitalVideo);
        this.isEligibleForPrime =
          this.constructor.getValue(obj.isEligibleForPrime
     || obj.IsEligibleForPrime);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'offerListingId', realName: 'OfferListingId' },
            { name: 'pricePerUnit', realName: 'PricePerUnit' },
            { name: 'price', realName: 'Price', type: 'Price' },
            { name: 'salePrice', realName: 'SalePrice', type: 'Price' },
            { name: 'amountSaved', realName: 'AmountSaved', type: 'Price' },
            { name: 'percentageSaved', realName: 'PercentageSaved' },
            { name: 'availability', realName: 'Availability' },
            {
                name: 'availabilityAttributes',
                realName: 'AvailabilityAttributes',
                type: 'AvailabilityAttributes',
            },
            {
                name: 'isEligibleForSuperSaverShipping',
                realName: 'IsEligibleForSuperSaverShipping',
            },
            {
                name: 'isEligibleForPrimeFreeDigitalVideo',
                realName: 'IsEligibleForPrimeFreeDigitalVideo',
            },
            { name: 'isEligibleForPrime', realName: 'IsEligibleForPrime' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = OfferListing;
