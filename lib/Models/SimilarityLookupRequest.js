/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of SimilarityLookupRequest
 */
class SimilarityLookupRequest extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.condition = this.constructor.getValue(obj.condition || obj.Condition);
        this.itemId = this.constructor.getValue(obj.itemId || obj.ItemId);
        this.merchantId = this.constructor.getValue(obj.merchantId || obj.MerchantId);
        this.responseGroup = this.constructor.getValue(obj.responseGroup || obj.ResponseGroup);
        this.similarityType = this.constructor.getValue(obj.similarityType || obj.SimilarityType);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'condition', realName: 'Condition' },
            { name: 'itemId', realName: 'ItemId', array: true },
            { name: 'merchantId', realName: 'MerchantId' },
            { name: 'responseGroup', realName: 'ResponseGroup', array: true },
            { name: 'similarityType', realName: 'SimilarityType' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = SimilarityLookupRequest;
