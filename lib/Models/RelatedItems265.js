/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of RelatedItems265
 */
class RelatedItems265 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.relationship = this.constructor.getValue(obj.relationship || obj.Relationship);
        this.relationshipType =
          this.constructor.getValue(obj.relationshipType
     || obj.RelationshipType);
        this.relatedItemCount =
          this.constructor.getValue(obj.relatedItemCount
     || obj.RelatedItemCount);
        this.relatedItemPageCount =
          this.constructor.getValue(obj.relatedItemPageCount
     || obj.RelatedItemPageCount);
        this.relatedItemPage =
          this.constructor.getValue(obj.relatedItemPage
     || obj.RelatedItemPage);
        this.relatedItem = this.constructor.getValue(obj.relatedItem || obj.RelatedItem);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'relationship', realName: 'Relationship' },
            { name: 'relationshipType', realName: 'RelationshipType' },
            { name: 'relatedItemCount', realName: 'RelatedItemCount' },
            { name: 'relatedItemPageCount', realName: 'RelatedItemPageCount' },
            { name: 'relatedItemPage', realName: 'RelatedItemPage' },
            { name: 'relatedItem', realName: 'RelatedItem', array: true, type: 'RelatedItem264' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = RelatedItems265;
