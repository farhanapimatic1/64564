/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Request162
 */
class Request162 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.isValid = this.constructor.getValue(obj.isValid || obj.IsValid);
        this.browseNodeLookupRequest =
          this.constructor.getValue(obj.browseNodeLookupRequest
     || obj.BrowseNodeLookupRequest);
        this.itemSearchRequest =
          this.constructor.getValue(obj.itemSearchRequest
     || obj.ItemSearchRequest);
        this.itemLookupRequest =
          this.constructor.getValue(obj.itemLookupRequest
     || obj.ItemLookupRequest);
        this.similarityLookupRequest =
          this.constructor.getValue(obj.similarityLookupRequest
     || obj.SimilarityLookupRequest);
        this.cartGetRequest = this.constructor.getValue(obj.cartGetRequest || obj.CartGetRequest);
        this.cartAddRequest = this.constructor.getValue(obj.cartAddRequest || obj.CartAddRequest);
        this.cartCreateRequest =
          this.constructor.getValue(obj.cartCreateRequest
     || obj.CartCreateRequest);
        this.cartModifyRequest =
          this.constructor.getValue(obj.cartModifyRequest
     || obj.CartModifyRequest);
        this.cartClearRequest =
          this.constructor.getValue(obj.cartClearRequest
     || obj.CartClearRequest);
        this.errors = this.constructor.getValue(obj.errors || obj.Errors);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'isValid', realName: 'IsValid' },
            {
                name: 'browseNodeLookupRequest',
                realName: 'BrowseNodeLookupRequest',
                type: 'BrowseNodeLookupRequest',
            },
            { name: 'itemSearchRequest', realName: 'ItemSearchRequest', type: 'ItemSearchRequest' },
            { name: 'itemLookupRequest', realName: 'ItemLookupRequest', type: 'ItemLookupRequest' },
            {
                name: 'similarityLookupRequest',
                realName: 'SimilarityLookupRequest',
                type: 'SimilarityLookupRequest',
            },
            { name: 'cartGetRequest', realName: 'CartGetRequest', type: 'CartGetRequest' },
            { name: 'cartAddRequest', realName: 'CartAddRequest', type: 'CartAddRequest' },
            { name: 'cartCreateRequest', realName: 'CartCreateRequest', type: 'CartCreateRequest' },
            { name: 'cartModifyRequest', realName: 'CartModifyRequest', type: 'CartModifyRequest' },
            { name: 'cartClearRequest', realName: 'CartClearRequest', type: 'CartClearRequest' },
            { name: 'errors', realName: 'Errors', type: 'Errors' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Request162;
